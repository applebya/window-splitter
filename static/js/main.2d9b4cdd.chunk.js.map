{"version":3,"sources":["components/FrameInner.tsx","components/Divider.tsx","components/FrameContainer.tsx","components/Frame.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FrameInner","styled","section","attrs","className","Divider","div","Wrapper","p","widthPercent","css","FrameContainer","props","children","rest","Array","length","Error","useState","setWidthPercent","isDragging","setIsDragging","ref","useRef","width","left","state","setState","useEffect","current","getBoundingClientRect","useWrapperPosition","wrapperRef","handleMouseUp","useCallback","handleMouseMove","clientX","window","addEventListener","removeEventListener","onMouseDown","container","Component","ConstrainedFrame","Frame","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+TAEA,IAIeA,EAJIC,IAAOC,QAAQC,MAAM,CACpCC,UAAW,6BADIH,CAAH,K,0WCAhB,IAkBeI,EAlBCJ,IAAOK,IAAIH,MAAM,CAC7BC,UAAW,0BADCH,CAAH,K,qaCOb,IAAMM,EAAUN,IAAOK,IAAIH,MAAM,CAC7BC,UAAW,wBADCH,CAAH,KAUH,SAAAO,GAAC,OACCA,EAAEC,cACFC,YADA,IAIiBF,EAAEC,iBAoFhBE,EA/CkB,SAAAC,GAAU,IAC/BC,EAAsBD,EAAtBC,SAAaC,EADiB,YACRF,EADQ,cAGtC,KAAMC,aAAoBE,QAAUF,EAASG,OAAS,EAClD,MAAM,IAAIC,MAAM,sDAJkB,MAOEC,mBAAwB,MAP1B,mBAO/BT,EAP+B,KAOjBU,EAPiB,OAQFD,oBAAkB,GARhB,mBAQ/BE,EAR+B,KAQnBC,EARmB,OAzBf,WAKvB,IAAMC,EAAMC,mBADX,EAEyBL,mBAAwB,CAC9CM,MAAO,KACPC,KAAM,OAJT,mBAEMC,EAFN,KAEaC,EAFb,KAkBD,OAXAC,qBAAU,WACN,GAAIN,GAAOA,EAAIO,QAAS,CAAC,IAAD,EACIP,EAAIO,QAAQC,wBAA5BN,EADY,EACZA,MAAOC,EADK,EACLA,KAEfE,EAAS,CACLH,QACAC,YAGT,CAACH,IAEG,CAACA,EAAKI,EAAMF,MAAOE,EAAMD,MAYEM,GATI,mBAS/BC,EAT+B,KASnBR,EATmB,KASZC,EATY,KAehCQ,EAAgBC,uBAAY,WAC9Bb,GAAc,KACf,IAEGc,EAAkBD,uBACpB,YAAkB,IAAfE,EAAc,EAAdA,QACMX,GAASD,GAEdL,GAAkBiB,EAAUX,GAAQD,EAAS,OAEjD,CAACA,EAAOC,IAaZ,OAVAG,qBAAU,WACFR,GACAiB,OAAOC,iBAAiB,YAAaH,GACrCE,OAAOC,iBAAiB,UAAWL,KAEnCI,OAAOE,oBAAoB,YAAaJ,GACxCE,OAAOE,oBAAoB,UAAWN,MAE3C,CAACb,EAAYe,EAAiBF,IAG7B,kBAAC1B,EAAD,eAASe,IAAKU,EAAYvB,aAAcA,GAAkBK,GACrDD,EAAS,GACV,kBAAC,EAAD,CAAS2B,YA9BO,WACpBnB,GAAc,MA8BTR,EAAS,K,qEC7FtB,IAMeZ,eANqB,SAAC,GAA4B,IAA1BwC,EAAyB,EAAzBA,UAAc3B,EAAW,6BACtD4B,EAAYD,EAAY9B,EAAiBX,EAE/C,OAAO,kBAAC0C,EAAc5B,KAGXb,CAAf,K,6OCXA,IAAMM,EAAUN,IAAOK,IAAV,KAOPqC,EAAmB1C,YAAO2C,EAAP3C,CAAH,KAiEP4C,MA5Df,WACI,OACI,kBAAC,EAAD,KACI,oDAEA,6BACA,6BAEA,yDACA,kBAAC,EAAD,CAAOJ,WAAS,GACZ,kBAAC,EAAD,4rBAcA,kBAAC,EAAD,irBAgBJ,6BACA,6BAEA,yDACA,kBAACE,EAAD,CAAkBF,WAAS,GACvB,kBAAC,EAAD,+JAKA,kBAAC,EAAD,kKCvDIK,QACW,cAA7BT,OAAOU,SAASC,UAEe,UAA7BX,OAAOU,SAASC,UAEhBX,OAAOU,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDqI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2d9b4cdd.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst FrameInner = styled.section.attrs({\n    className: 'WindowSplitter-FrameInner'\n})``;\n\nexport default FrameInner;\n","import styled from 'styled-components';\n\nconst Divider = styled.div.attrs({\n    className: 'WindowSplitter-Divider'\n})`\n    display: block;\n    position: relative;\n    min-width: 6px;\n    width: 6px;\n    cursor: ew-resize;\n\n    :before {\n        content: '';\n        display: block;\n        left: 2px;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.5);\n        width: 1px;\n    }\n`;\nexport default Divider;\n","import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport Divider from './Divider';\n\ntype WrapperProps = {\n    widthPercent: number | null;\n};\n\nconst Wrapper = styled.div.attrs({\n    className: 'WindowSplitter-Frame'\n})<WrapperProps>`\n    display: flex;\n    align-items: stretch;\n    border: 1px solid rgba(0, 0, 0, 0.5);\n\n    > section {\n        flex: 1;\n\n        ${p =>\n            p.widthPercent &&\n            css`\n                :first-child {\n                    flex: none;\n                    width: ${p.widthPercent}%;\n                }\n            `}\n    }\n`;\n\ntype PositionState = {\n    width: number | null;\n    left: number | null;\n};\n\n// Custom hook to get the frame container's width & left positioning\nconst useWrapperPosition = (): [\n    React.MutableRefObject<HTMLDivElement>,\n    number | null,\n    number | null\n] => {\n    const ref = useRef() as React.MutableRefObject<HTMLDivElement>;\n    const [state, setState] = useState<PositionState>({\n        width: null,\n        left: null\n    });\n\n    useEffect(() => {\n        if (ref && ref.current) {\n            const { width, left } = ref.current.getBoundingClientRect();\n\n            setState({\n                width,\n                left\n            });\n        }\n    }, [ref]);\n\n    return [ref, state.width, state.left];\n};\n\nconst FrameContainer: React.FC = props => {\n    const { children, ...rest } = props;\n\n    if (!(children instanceof Array) || children.length < 2) {\n        throw new Error('<FrameContainer/> must contain 2 <Frame/> children');\n    }\n\n    const [widthPercent, setWidthPercent] = useState<number | null>(null);\n    const [isDragging, setIsDragging] = useState<boolean>(false);\n    const [wrapperRef, width, left] = useWrapperPosition();\n\n    const handleMouseDown = () => {\n        setIsDragging(true);\n    };\n\n    const handleMouseUp = useCallback(() => {\n        setIsDragging(false);\n    }, []);\n\n    const handleMouseMove = useCallback(\n        ({ clientX }) => {\n            if (!left || !width) return;\n\n            setWidthPercent(((clientX - left) / width) * 100);\n        },\n        [width, left]\n    );\n\n    useEffect(() => {\n        if (isDragging) {\n            window.addEventListener('mousemove', handleMouseMove);\n            window.addEventListener('mouseup', handleMouseUp);\n        } else {\n            window.removeEventListener('mousemove', handleMouseMove);\n            window.removeEventListener('mouseup', handleMouseUp);\n        }\n    }, [isDragging, handleMouseMove, handleMouseUp]);\n\n    return (\n        <Wrapper ref={wrapperRef} widthPercent={widthPercent} {...rest}>\n            {children[0]}\n            <Divider onMouseDown={handleMouseDown} />\n            {children[1]}\n        </Wrapper>\n    );\n};\n\nexport default FrameContainer;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport FrameInner from './FrameInner';\nimport FrameContainer from './FrameContainer';\n\ntype FrameProps = {\n    container?: boolean;\n};\n\nconst Frame: React.FC<FrameProps> = ({ container, ...rest }) => {\n    const Component = container ? FrameContainer : FrameInner;\n\n    return <Component {...rest} />;\n};\n\nexport default styled(Frame)``;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Frame from './components/Frame';\n\nconst Wrapper = styled.div`\n    h1,\n    h2 {\n        text-align: center;\n    }\n`;\n\nconst ConstrainedFrame = styled(Frame)`\n    width: 75%;\n    margin: 0px auto;\n`;\n\nfunction App() {\n    return (\n        <Wrapper>\n            <h1>Window Splitter Demo</h1>\n\n            <br />\n            <br />\n\n            <h2>Full-screen window frames</h2>\n            <Frame container>\n                <Frame>\n                    Sink me square-rigged sutler Jack Ketch rum avast gunwalls\n                    Plate Fleet long clothes marooned barkadeer. Take a caulk\n                    ballast Letter of Marque case shot black spot hogshead\n                    scallywag haul wind draft hornswaggle bilged on her anchor.\n                    Parley clipper port lookout lugsail ho bring a spring upon\n                    her cable Cat o'nine tails landlubber or just lubber\n                    coxswain aye. Cable booty code of conduct reef broadside\n                    bilge rat brigantine nipperkin Arr fire ship port. Keelhaul\n                    belaying pin handsomely wherry run a rig crack Jennys tea\n                    cup coffer brigantine fire in the hole provost bucko. Tack\n                    execution dock rigging Chain Shot Letter of Marque fire in\n                    the hole galleon Plate Fleet strike colors draft grog.\n                </Frame>\n                <Frame>\n                    Killick spike reef sails brigantine hang the jib Buccaneer\n                    American Main jury mast mizzen provost ho. Carouser black\n                    jack swing the lead fore gunwalls pink sheet hulk quarter\n                    killick booty. Sea Legs hardtack yo-ho-ho lateen sail\n                    marooned execution dock coffer lookout furl scurvy American\n                    Main. Hearties smartly broadside measured fer yer chains\n                    Pirate Round hornswaggle pink Plate Fleet dance the hempen\n                    jig bilged on her anchor swing the lead. Brig booty clap of\n                    thunder Barbary Coast hands gangplank Chain Shot snow Plate\n                    Fleet splice the main brace gabion. Jack reef barkadeer\n                    maroon hornswaggle dead men tell no tales code of conduct\n                    Buccaneer hempen halter scuttle spirits.\n                </Frame>\n            </Frame>\n\n            <br />\n            <br />\n\n            <h2>Constrained window frames</h2>\n            <ConstrainedFrame container>\n                <Frame>\n                    Hearties smartly broadside measured fer yer chains Pirate\n                    Round hornswaggle pink Plate Fleet dance the hempen jig\n                    bilged on her anchor swing the lead.\n                </Frame>\n                <Frame>\n                    Hearties smartly broadside measured fer yer chains Pirate\n                    Round hornswaggle pink Plate Fleet dance the hempen jig\n                    bilged on her anchor swing the lead.\n                </Frame>\n            </ConstrainedFrame>\n        </Wrapper>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}